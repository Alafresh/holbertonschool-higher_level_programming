The ``add_integer`` module
======================

Using ``add_integer``
-------------------

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:
    1) two integers
    >>> add_integer(6, 12)
    18

    2) pass paremeter b like argument
    >>> add_integer(6, 'hola')
    Traceback (most recent call last):
    TypeError: b must be an integer

    3) pass paremeter a as argument
    >>> add_integer('adios', 6)
    Traceback (most recent call last):
    TypeError: a must be an integer

    4) add two float
    >>> add_integer(4.8, 4.8)
    8

    5) add two negative numbers
    >>> add_integer(-4, -4)
    -8

    6) add one float number
    >>> add_integer(3, 3.8)
    6

    7) add float with negative
    >>> add_integer(100.3, -2)
    98

    8) add b string number
    >>> add_integer(3, '3')
    Traceback (most recent call last):
    TypeError: b must be an integer

    9) add a string number
    >>> add_integer('2', 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

    10) float oveflow
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    11) NaN float
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    12) missing two arguments
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    13) missing one argument
    >>> add_integer(11)
    109
